---
import { getCollection, render } from "astro:content";
import { formatDate } from "../../helpers";
import Layout from "../../layouts/Layout.astro";
import LinkFilm from "../../components/LinkFilm.astro";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const personnes = await getCollection("personne");
  return personnes.map((personne) => ({
    params: { id: personne.id },
    props: { personne },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { personne } = Astro.props;
const { Content } = await render(personne);

const professions = personne.data.profession && [
  ...new Set(personne.data.profession),
];

const filmsRealises = [...(await getCollection("films"))].filter(
  (film) => film.data?.realisateur?.id === personne.id
);
---

<Layout pageTitle={personne.data.nom}>
  <h1>{personne.data.nom}</h1>
  <p>Nationalité : {personne.data.nationalite}</p>
  <p>Date de naissance : {formatDate(personne.data.dateNaissance)}</p>
  <p>Lieu de naissance : {personne.data.lieuNaissance}</p>
  {
    personne.data.dateDeces && (
      <p>Date de décès : {formatDate(personne.data.dateDeces)}</p>
    )
  }
  {
    professions && (
      <p>
        Profession{professions.length > 1 && <>s</>} :{" "}
        {professions.join(", ").replace(/, ([^,]*)$/, " et $1")}.
      </p>
    )
  }
  {
    filmsRealises.length > 0 && (
      <p class="text-lg text-gray-700">
        <strong>Films réalisés :</strong>{" "}
        {filmsRealises.map((film) => (
          <LinkFilm {...film} />
        ))}
      </p>
    )
  }
  <div class="prose">
    <Content />
  </div>
</Layout>
